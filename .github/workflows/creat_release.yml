# name: Build and Release

# on:
#   push:
#     tags:
#       - 'v*'

# jobs:

#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#     - uses: actions/checkout@v2
    
#     - name: Set up Go
#       uses: actions/setup-go@v2
#       with:
#         go-version: 1.22
        
#     - name: Install dependencies
#       run: |
#         go mod tidy
        
#     - name: Build for Windows
#       env:
#         GOOS: windows
#         GOARCH: amd64
#       run: |  
#         go build -o speedtest.exe
        
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref_name }}
#         release_name: Release ${{ github.ref_name }}
#         draft: false
#         prerelease: false
        
#     - name: Upload Windows Release Asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./speedtest.exe
#         asset_name: speedtest.exe
#         asset_content_type: application/vnd.microsoft.portable-executable
        

name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:

  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.22
        
    - name: Install dependencies
      run: |
        go mod tidy
        
    - name: Build for Windows
      env:
        GOOS: windows
        GOARCH: amd64
      run: |  
        go build -o speedtest.exe

    # 获取标签描述（tag message）
    - name: Get tag description
      id: get_tag_description
      run: |
        TAG_DESCRIPTION=$(git tag -l --format="%(contents)" ${{ github.ref_name }})
        echo $TAG_DESCRIPTION
        echo "tag_description=$TAG_DESCRIPTION" >> $GITHUB_ENV


        #     - name: Get tag info
        # id: get_tag_info
        # shell: pwsh
        # run: |
        #   $tag = git describe --tags --abbrev=0
        #   echo "LATEST_TAG=$tag" >> $env:GITHUB_ENV
        #   $tagMessage = git tag -l --format='%(contents)' $LATEST_TAG
        #   echo "TAG_MESSAGE=$tagMessage" >> $env:GITHUB_ENV

    - name: Get latest commit message
      id: get_commit_message
      run: |
        COMMIT_MESSAGE=$(git log -1 --pretty=%B)
        echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_ENV
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "Release ${{ github.ref_name }} - ${{ env.tag_description }} | Commit: ${{ env.commit_message }}"
        draft: false
        prerelease: false
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./speedtest.exe
        asset_name: speedtest.exe
        asset_content_type: application/vnd.microsoft.portable-executable
