# name: Build and Release

# on:
#   push:
#     tags:
#       - 'v*'

# jobs:
#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0
    
#     - name: Set up Go
#       uses: actions/setup-go@v5
#       with:
#         go-version: '1.22'
    
#     - name: Install dependencies
#       run: go mod tidy
    
#     - name: Build for Windows
#       env:
#         GOOS: windows
#         GOARCH: amd64
#       run: go build -o speedtest.exe
    
#     - name: Get tag description
#       id: tag_description
#       run: |
#         TAG_DESCRIPTION=$(git tag -l --format='%(contents)' ${{ github.ref_name }})
#         echo ${TAG_DESCRIPTION}
#         echo "description=${TAG_DESCRIPTION}" >> $GITHUB_OUTPUT
    
#     - name: Get latest commit message
#       id: commit_message
#       run: |
#         COMMIT_MESSAGE=$(git log -1 --pretty=%B)
#         echo "message=${COMMIT_MESSAGE}" >> $GITHUB_OUTPUT
    
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref_name }}
#         release_name: "Release ${{ github.ref_name }} - ${{ steps.tag_description.outputs.description }} | Commit: ${{ steps.commit_message.outputs.message }}"
#         draft: false
#         prerelease: false
    
#     - name: Upload Windows Release Asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./speedtest.exe
#         asset_name: speedtest.exe
#         asset_content_type: application/vnd.microsoft.portable-executable







name: Go Release Workflow

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build
        run: GOOS=windows GOARCH=amd64 go build -o speedtest.exe main.go

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get tag message
        id: tag
        run: |
          TAG_MESSAGE=$(git tag -l --format='%(contents)' ${{ steps.get_version.outputs.VERSION }})
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$TAG_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get latest commit message
        id: commit_message
        run: |
          echo "message<<EOF" >> $GITHUB_OUTPUT
          git log -1 --pretty=%B >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get commit history
        id: commit_history
        run: |
          echo "messages<<EOF" >> $GITHUB_OUTPUT
          git log $(git describe --tags --abbrev=0 ${{ steps.get_version.outputs.VERSION }}^)...${{ steps.get_version.outputs.VERSION }} --pretty=format:"- %s" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: speedtest.exe
          name: ${{ steps.get_version.outputs.VERSION }} - ${{ steps.tag.outputs.message }}
          body: |
            更新：${{ steps.commit_message.outputs.message }}

            历次提交描述：
            ${{ steps.commit_history.outputs.messages }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}