# name: Build and Release

# on:
#   push:
#     tags:
#       - 'v*'

# jobs:
#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0
    
#     - name: Set up Go
#       uses: actions/setup-go@v5
#       with:
#         go-version: '1.22'
    
#     - name: Install dependencies
#       run: go mod tidy
    
#     - name: Build for Windows
#       env:
#         GOOS: windows
#         GOARCH: amd64
#       run: go build -o speedtest.exe
    
#     - name: Get tag description
#       id: tag_description
#       run: |
#         TAG_DESCRIPTION=$(git tag -l --format='%(contents)' ${{ github.ref_name }})
#         echo ${TAG_DESCRIPTION}
#         echo "description=${TAG_DESCRIPTION}" >> $GITHUB_OUTPUT
    
#     - name: Get latest commit message
#       id: commit_message
#       run: |
#         COMMIT_MESSAGE=$(git log -1 --pretty=%B)
#         echo "message=${COMMIT_MESSAGE}" >> $GITHUB_OUTPUT
    
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref_name }}
#         release_name: "Release ${{ github.ref_name }} - ${{ steps.tag_description.outputs.description }} | Commit: ${{ steps.commit_message.outputs.message }}"
#         draft: false
#         prerelease: false
    
#     - name: Upload Windows Release Asset
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./speedtest.exe
#         asset_name: speedtest.exe
#         asset_content_type: application/vnd.microsoft.portable-executable





name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码仓库
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Go 环境
      - name: Setup Go 1.22
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      # 编译 main.go 为 speedtest.exe
      - name: Build speedtest.exe
        run: GOOS=windows GOARCH=amd64 go build -o speedtest.exe main.go

      # 创建 Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}-${{ github.event.head_commit.message }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      # 上传编译的文件到 Release
      - name: Upload speedtest.exe to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./speedtest.exe
          asset_name: speedtest.exe
          asset_content_type: application/octet-stream
